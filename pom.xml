<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>keybridge.lib</groupId>
  <artifactId>jose</artifactId>
  <version>1.3.0</version>
  <packaging>jar</packaging>

  <name>lib-jose</name>
  <description>JSON Object Signing and Encryption (JOSE)

    A clean-room implementation of the JSON Object Signing
    and Encryption (JOSE) specifications in Java. Includes
    RFC 7515 JSON Web Signature (JWS),
    RFC 7516 JSON Web Encryption (JWE),
    RFC 7517 JSON Web Key (JWK),
    RFC 7518 JSON Web Algorithm (JWA),
    RFC 7519 JSON Web Token (JWT),
    RFC 7797 JWS Unencoded payload ("JUP").

    History:

    v0.0.1 - new project
    v0.1.0 - core functionality implemented
    v0.1.1 - API improvements
    v0.2.0 - API improvements: added JWE Builder
    v0.2.1 - JwsJsonFlattened signature validation method added
    v0.2.2 - new method JOSE::unpackSignedAndEncryptedJson for use with a secret key
    v0.3.0 - package a JAR, not OSGI bundle
    v0.4.0 - refactor into org.ietf base package
    v0.5.0 - refactor and rename classes to better match the specifications; significant javadoc
    v0.6.0 - harmonize  entity names, bug fixes
    v0.7.0 - remove lombok shortcut annotations
    v0.8.0 - clean up hashcode, equals, tostring, javadoc
    v0.9.0 - rewrite JwtClaims to use ZonedDateTime, fix marshal, unmarshal, equality test error
    v0.9.1 - clarify API when using String secret keys for encryption or decryption
    v0.9.2 - rename fromArbitraryString to fromSharedSecret
    v0.9.3 - merge 'fixes' branch
    v0.10.0 - remove all XML annotation; upgrade fasterXML to JsonB
    v1.0.0 - first release 2020-08-18  'ta da'
    v1.0.1 - add support for enumerated JWT claim types from the IANA registry
    v1.0.2 - add JwtUtility for easier JWT handling
    - add JweUtility for easier encryption / decryption
    - add JwsUtility for easier object signing / verification
    - deprecate JoseFactory; prefer to use Jw[s]Utility classes
    v1.1.0 - utility release using Jw[x]Utility classes and using JSON-B
    - move utility classes to 'ch.keybridge.jose' package
    - move abstract class to 'org.ietf.jose' package
    v1.1.1 - patch JwtClaims to correctly encode epoch seconds
    v1.2.0 - rename JwtClaims expirationTime field to expiresAt to match OAuth + OpenId implementation
    v1.3.0 change JwtClaims 'aud' from singleton to collection for improved interoperability with other RFC 7519 implementations
    - add RFC 8693 Actor claim object
    - add incremental support for Elliptic Curve Cryptography (ECC) keys; deserialize not complete



  </description>

  <organization>
    <name>Key Bridge</name>
    <url>http://keybridge.ch</url>
  </organization>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <showDeprecation>true</showDeprecation>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <bouncycastle.version>1.59</bouncycastle.version>
    <jackson.version>2.9.3</jackson.version>
  </properties>


  <dependencies>
    <!-- JSON-P -->
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>jakarta.json</artifactId>
      <version>1.1.5</version>
      <scope>provided</scope>
    </dependency>
    <!-- JSON-B API -->
    <dependency>
      <groupId>jakarta.json.bind</groupId>
      <artifactId>jakarta.json.bind-api</artifactId>
      <version>1.0.1</version>
      <scope>provided</scope>
    </dependency>
    <!-- Yasson (JSON-B implementation) -->
    <dependency>
      <groupId>org.eclipse</groupId>
      <artifactId>yasson</artifactId>
      <version>1.0.3</version>
      <scope>provided</scope>
    </dependency>


    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
    </dependency>
    <!-- Interoperability testing-->
    <dependency>
      <groupId>org.bitbucket.b_c</groupId>
      <artifactId>jose4j</artifactId>
      <version>0.6.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.auth0</groupId>
      <artifactId>java-jwt</artifactId>
      <version>3.3.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>keybridge.lib</groupId>
      <artifactId>cryptography</artifactId>
      <version>5.0.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <scope>test</scope>
      <version>2.44.0</version>
    </dependency>
    <dependency>
      <groupId>com.opera</groupId>
      <artifactId>operadriver</artifactId>
      <scope>test</scope>
      <version>1.5</version>
      <exclusions>
        <exclusion>
          <groupId>org.seleniumhq.selenium</groupId>
          <artifactId>selenium-remote-driver</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.thedeanda</groupId>
      <artifactId>lorem</artifactId>
      <version>2.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>


  <distributionManagement>
    <repository>
      <id>${repository.name}</id>
      <url>${repository.url}</url>
    </repository>
  </distributionManagement>

</project>
